{"version":3,"sources":["OrderModal/styled.ts","OrderModal/OrderModal.tsx","styled.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Item","styled","div","ItemTitle","DragBtn","OrderModal","props","useState","columns","setColumns","useEffect","dataSource","map","item","onDragEnd","useCallback","result","destination","source","droppableId","index","updateColumns","col","splice","reorderItem","forEach","order","updateVisibility","checkState","checkItem","visible","handleDefault","e","defaultItem","defaultColumns","find","def","dataIndex","handleCancel","orderModalCancel","handleOk","modalFooter","useMemo","type","onClick","provided","sortedColumns","sort","a","b","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","DragOutlined","title","onChange","checked","placeholder","onCancel","footer","direction","Header","Wrapper","columnData","data","key","column1","column2","column3","column4","column5","column6","App","isOrderModalVisible","setIsOrderModalVisible","useLocalStorage","objCopy","push","getOrderColumns","getColumns","reduce","acc","curVal","orderModalChangeVisible","pagination","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2a80a6f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 13px 0;\r\n  background-color: white;\r\n  &:not(:first-child) {\r\n    border-top: 1px solid #ccc;\r\n  }\r\n`;\r\n\r\nexport const ItemTitle = styled.div`\r\n  flex: 1;\r\n  padding: 0 10px;\r\n`;\r\n\r\nexport const DragBtn = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Modal, Button, Switch } from 'antd';\r\nimport { DragOutlined } from '@ant-design/icons';\r\nimport { ColumnsType, orderModalProps } from '../AppTypes';\r\nimport { Item, ItemTitle, DragBtn } from './styled';\r\nimport { DragDropContext, Draggable, Droppable, DroppableProvided, DropResult } from 'react-beautiful-dnd';\r\n\r\nconst OrderModal: React.FC<orderModalProps> = (props) => {\r\n  const [columns, setColumns] = useState<ColumnsType[]>([]);\r\n\r\n  useEffect(() => {\r\n    setColumns(props.dataSource.map((item) => ({ ...item })));\r\n  }, [props.dataSource]);\r\n\r\n  const onDragEnd = useCallback(\r\n    (result: DropResult) => {\r\n      const { destination, source } = result;\r\n      if (!destination) return;\r\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n        return;\r\n      }\r\n\r\n      const updateColumns = columns.map((col) => ({ ...col }));\r\n      const [reorderItem] = updateColumns.splice(source.index, 1);\r\n      updateColumns.splice(destination.index, 0, reorderItem);\r\n      updateColumns.forEach((item, index) => item.order = index);\r\n      setColumns(updateColumns);\r\n    },\r\n    [columns]\r\n  );\r\n\r\n  const updateVisibility = useCallback(\r\n    (checkState: boolean, checkItem: ColumnsType) => {\r\n      setColumns(() => (\r\n        columns.map((item) => {\r\n          if (item === checkItem) item = { ...checkItem, visible: checkState };\r\n          return item;\r\n        })\r\n      ))\r\n    },\r\n    [columns]\r\n  );\r\n\r\n  const handleDefault = useCallback(() => {\r\n    const updateColumns = columns.map((e) => {\r\n      const defaultItem = props.defaultColumns.find(\r\n        (def) => e.dataIndex === def.dataIndex\r\n      );\r\n      return {\r\n        ...e,\r\n        order: defaultItem!.order,\r\n        visible: defaultItem!.visible,\r\n      };\r\n    });\r\n    setColumns(updateColumns);\r\n  }, [columns, props.defaultColumns]);\r\n\r\n  const handleCancel = useCallback(() => {\r\n    setColumns(props.dataSource);\r\n    props.orderModalCancel();\r\n  }, [props]);\r\n\r\n  const handleOk = useCallback(() => {\r\n    props.orderModalCancel();\r\n    props.updateColumns(columns);\r\n  }, [columns, props]);\r\n\r\n  const modalFooter = useMemo(() => {\r\n    return (\r\n      <footer>\r\n        <div>\r\n          <Button type=\"dashed\" onClick={handleDefault}>Default settings</Button>\r\n          <Button onClick={handleCancel}>Cancel</Button>\r\n          <Button type=\"primary\" onClick={handleOk}>\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </footer>\r\n    )\r\n  },[handleCancel, handleDefault, handleOk])\r\n\r\n  const provided = useMemo(() => {\r\n    const sortedColumns = columns.sort((a, b) => (a.order > b.order ? 1 : -1));\r\n\r\n    return (\r\n    (provided: DroppableProvided) => (\r\n      <div ref={provided.innerRef} {...provided.droppableProps}>\r\n        {sortedColumns.map((item, index) => (\r\n          <Draggable\r\n            key={item.dataIndex}\r\n            draggableId={item.dataIndex}\r\n            index={index}\r\n          >\r\n            {(provided) => (\r\n              <Item ref={provided.innerRef} {...provided.draggableProps}>\r\n                <DragBtn {...provided.dragHandleProps}>\r\n                  <DragOutlined />\r\n                </DragBtn>\r\n                <ItemTitle>{item.title}</ItemTitle>\r\n                <Switch\r\n                  key={item.dataIndex}\r\n                  onChange={(e) => (updateVisibility(e, item))}\r\n                  checked={item.visible}\r\n                />\r\n              </Item>\r\n            )}\r\n          </Draggable>\r\n        ))}\r\n        {provided.placeholder}\r\n      </div>\r\n    ))\r\n  },[columns, updateVisibility])\r\n\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Customize Columns\"\r\n      visible={props.visible}\r\n      onCancel={handleCancel}\r\n      footer={modalFooter}\r\n    >\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\" direction={'vertical'}>\r\n          {provided}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport { OrderModal };\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.div`\r\n  padding: 20px;\r\n`;\r\nexport const Wrapper = styled.div`\r\n  padding: 20px;\r\n`;\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { OrderModal } from './OrderModal';\r\nimport { Table, Button } from 'antd';\r\nimport useLocalStorage from 'use-local-storage';\r\nimport { Header, Wrapper } from './styled';\r\nimport { ColumnsType } from './AppTypes';\r\n\r\nconst columnData = [\r\n  {\r\n    dataIndex: \"column1\",\r\n    title: \"Column1\",\r\n    visible: true,\r\n    order: 0,\r\n  },\r\n  {\r\n    dataIndex: \"column2\",\r\n    title: \"Column2\",\r\n    order: 1,\r\n    visible: true\r\n  },\r\n  {\r\n    dataIndex: \"column3\",\r\n    title: \"Column3\",\r\n    order: 2,\r\n    visible: true\r\n  },\r\n  {\r\n    dataIndex: \"column4\",\r\n    title: \"Column4\",\r\n    order: 3,\r\n    visible: true\r\n  },\r\n  {\r\n    dataIndex: \"column5\",\r\n    title: \"Column5\",\r\n    order: 4,\r\n    visible: true\r\n  },\r\n  {\r\n    dataIndex: \"column6\",\r\n    title: \"Column6\",\r\n    order: 5,\r\n    visible: true\r\n  }\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: \"0\",\r\n    column1: \"Data Column1\",\r\n    column2: \"Data Column2\",\r\n    column3: 'Data Column3',\r\n    column4: \"Data Column4\",\r\n    column5: \"Data Column5\",\r\n    column6: \"Data Column6\"\r\n  },\r\n];\r\n\r\nconst App: React.FC = () => {\r\n  const [isOrderModalVisible, setIsOrderModalVisible] = useState(false);\r\n\r\n  const getOrderColumns = () => {\r\n    const objCopy: ColumnsType[] = [];\r\n    columnData.map((e) => {\r\n      objCopy.push({\r\n        dataIndex: e.dataIndex,\r\n        title: e.title,\r\n        order: e.order,\r\n        visible: e.visible,\r\n      });\r\n    });\r\n    return objCopy;\r\n  };\r\n\r\n  const [columns, setColumns] = useLocalStorage<ColumnsType[]>('doc_columns', getOrderColumns());\r\n\r\n  const getColumns = useMemo(() => {\r\n    return columnData\r\n      .reduce((acc, curVal) => {\r\n        const col = columns.find((e) => e.dataIndex === curVal.dataIndex);\r\n        if (col!.visible) acc.splice(col!.order, 0, {...curVal, visible: col!.visible, order: col!.order});\r\n        return acc;\r\n      }, [] as ColumnsType[])\r\n  }, [columns]);\r\n\r\n  const orderModalChangeVisible = useCallback(() => {\r\n    setIsOrderModalVisible(!isOrderModalVisible);\r\n  },[isOrderModalVisible])\r\n\r\n  const updateColumns = useCallback(\r\n    (data: ColumnsType[]) => setColumns(data),\r\n    [setColumns]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <Button onClick={orderModalChangeVisible}>Customize Columns</Button>\r\n      </Header>\r\n      <Wrapper>\r\n        <OrderModal\r\n          orderModalCancel={orderModalChangeVisible}\r\n          visible={isOrderModalVisible}\r\n          dataSource={columns}\r\n          defaultColumns={columnData}\r\n          updateColumns={updateColumns}\r\n        />\r\n        <Table\r\n          columns={getColumns}\r\n          dataSource={data}\r\n          pagination={false}\r\n        />\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}